/* eslint import/no-unresolved: "off" */
import {Handler} from 'aws-lambda';

export type TriggerHandler = Handler<Parameters, ParametersOutput>;

export interface Parameters {
  readonly captchaTriggerJob?: {};
}

export interface ParametersOutput {
  readonly parameters: {
    readonly captchaGeneratingJob: {};
  };
}

export const triggerHandler: TriggerHandler = async (para, _context) => {
  console.debug(`Receiving captcha generating event ${JSON.stringify(para, null, 2)}.`);

  //increase the write capacity to 2000
  // Load the AWS SDK for Node.js
  let AWS = require('aws-sdk');

  // Set the region
  AWS.config.update({region: process.env.AWS_REGION});

  // Create the DynamoDB service object
  let ddb = new AWS.DynamoDB({apiVersion: '2012-08-10'});
  let ddbtablename = process.env.DDB_TABLE_NAME
  let params = {
    TableName: ddbtablename,
    ProvisionedThroughput: {
      WriteCapacityUnits: 2000,
      ReadCapacityUnits: 20
    },
  };

  ddb.updateTable(params, function (err, data) {
    if (err) console.error(err, err.stack); // an error occurred
    else console.debug("Succeed update the write capacity unit to 2000");           // successful response
  });

  const parameters: ParametersOutput = {
    parameters: {
      captchaGeneratingJob: {},
    },
  };
  return parameters;
};
